{{- if .Values.httpfs.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hadoop.fullname" . }}-httpfs
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "hadoop.name" . }}
    app.kubernetes.io/component: httpfs
    {{- include "hadoop.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hadoop.name" . }}
      app.kubernetes.io/component: httpfs
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ include "hadoop.fullname" . }}-namenode
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hadoop.name" . }}
        app.kubernetes.io/component: httpfs
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      containers:
      - name: httpfs
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
          - name: HTTPFS_HTTP_PORT
            value: {{ .Values.httpfs.port | quote }}
          - name: HTTPFS_ADMIN_PORT
            value: {{ .Values.httpfs.adminPort | quote }}
          - name: CATALINA_OPTS
            value: -Dhttpfs.admin.hostname=0.0.0.0
        command:
        - "/bin/bash"
        - "/tmp/hadoop-config/bootstrap.sh"
        - "-d"
        - "httpfs"
        resources:
{{ toYaml .Values.nameNode.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /webhdfs/v1?op=gethomedirectory&user.name=hdfs
            port: {{ .Values.httpfs.port }}
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ include "hadoop.fullname" . }}-hadoop
{{- end }}